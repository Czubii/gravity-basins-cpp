cmake_minimum_required(VERSION 3.18 FATAL_ERROR)
project(gravitybasins LANGUAGES CXX CUDA)

# Set CUDA properties
set(CMAKE_CUDA_STANDARD 11)
set(CMAKE_CUDA_STANDARD_REQUIRED ON)
set(CMAKE_CUDA_ARCHITECTURES "60")  # Adjust this to your GPU architecture

# Specify source files
file(GLOB CUDA_SOURCES "src/*.cu")
file(GLOB CPP_SOURCES "src/*.cpp")

# Define the executable
add_executable(gravitybasins ${CPP_SOURCES} ${CUDA_SOURCES})

#------- SFML -------

# Set the path to SFML libraries and binaries
set(SFML_LIB_DIR "${CMAKE_SOURCE_DIR}/external/SFML/lib")
set(SFML_BIN_DIR "${CMAKE_SOURCE_DIR}/external/SFML/bin")
set(SFML_LIB_DEST "${CMAKE_BINARY_DIR}")

# List of SFML .dll files you want to copy
set(SFML_DLLS sfml-system-2 sfml-window-2 sfml-graphics-2 sfml-audio-2 sfml-network-2)

# Copy SFML .dll files to the build output directory after the build
add_custom_command(TARGET gravitybasins POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    ${SFML_BIN_DIR}/sfml-system-2.dll
    ${SFML_LIB_DEST}
    ${SFML_BIN_DIR}/sfml-window-2.dll
    ${SFML_LIB_DEST}
    ${SFML_BIN_DIR}/sfml-graphics-2.dll
    ${SFML_LIB_DEST}
    ${SFML_BIN_DIR}/sfml-audio-2.dll
    ${SFML_LIB_DEST}
    ${SFML_BIN_DIR}/sfml-network-2.dll
    ${SFML_LIB_DEST}
    COMMENT "Copying SFML DLLs to the output directory"
)

# Specify include directories for your project
target_include_directories(gravitybasins PRIVATE ${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/src)

# Link libraries if needed (e.g., for CUDA runtime)
target_link_libraries(gravitybasins PRIVATE cuda)

# Link SFML libraries
target_link_libraries(gravitybasins PRIVATE "${SFML_LIB_DIR}/sfml-system.lib"
                                            "${SFML_LIB_DIR}/sfml-window.lib"
                                            "${SFML_LIB_DIR}/sfml-graphics.lib"
                                            "${SFML_LIB_DIR}/sfml-audio.lib"
                                            "${SFML_LIB_DIR}/sfml-network.lib")

# Include SFML headers
target_include_directories(gravitybasins PRIVATE "${CMAKE_SOURCE_DIR}/external/SFML/include")

# Add the include directory
target_include_directories(gravitybasins PRIVATE ${CMAKE_SOURCE_DIR}/include)

# Enable CUDA compiler features
set_property(TARGET gravitybasins PROPERTY CUDA_SEPARABLE_COMPILATION ON)

# Ensure consistency in runtime library usage
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MD")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MD")